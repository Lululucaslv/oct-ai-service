services:
  daxiazhaoguang-ai:
    build: .
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - BASE_URL=${BASE_URL:-https://test.daxiazhaoguang.com/server/}
      - DAXIA_API_TOKEN=${DAXIA_API_TOKEN}
      - AUTHORIZATION_TOKEN=${AUTHORIZATION_TOKEN}
      - USE_MOCK_DATA=${USE_MOCK_DATA:-False}
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./logs:/app/logs
    networks:
      - daxiazhaoguang-network

  litellm-proxy:
    image: ghcr.io/berriai/litellm:main-stable
    ports:
      - "4000:4000" # 将代理的4000端口暴露给主机
    environment:
      - LITELLM_CONFIG_PATH=/app/litellm_config.yaml
    volumes:
      - ./litellm_config.yaml:/app/litellm_config.yaml # 将配置文件挂载到容器中
    depends_on:
      - daxiazhaoguang-ai # 确保我们的AI服务先启动
    networks:
      - daxiazhaoguang-network

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    ports:
      - "3000:8080" # Open WebUI端口映射
    environment:
      - OPENAI_API_BASE_URL=http://daxiazhaoguang-ai:8000/v1 # 直接连接到FastAPI服务
      - OPENAI_API_KEY=sk-fake-key # 虚拟API密钥
      - WEBUI_AUTH=False # 禁用登录以简化测试
      - ENABLE_SIGNUP=False # 禁用用户注册
      - ENABLE_LOGIN_FORM=False # 禁用登录表单
      - DEFAULT_USER_ROLE=admin # 设置默认用户角色为管理员
      - ENABLE_OPENAI_API=true # 启用OpenAI API支持
    volumes:
      - open-webui-data:/app/backend/data # 持久化数据存储
    depends_on:
      - daxiazhaoguang-ai # 确保AI服务先启动
    networks:
      - daxiazhaoguang-network
    restart: unless-stopped

volumes:
  open-webui-data:

networks:
  daxiazhaoguang-network:
    driver: bridge
